class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int i=0,ans;
        for(int i=0;i<nums.size();i++){
            int currnum = abs(nums[i])-1;
            if(nums[currnum]<0)
                ans=currnum+1;
            else 
                nums[currnum] *= -1;
        }
        return ans;
    }
};

//other method is by cyclic sort(this is better)

/*class Solution {
public:
    int findDuplicate(vector<int>& nums) {
       int i=0;
            
            while(i<nums.size()) {
                    int correct = nums[i] - 1;
                    
                    if(nums[correct] != nums[i] && i<nums.size()) {
                            swap(nums[i],nums[correct]);
                    } else {
                            i++;
                    }
            }
            
            for(int i=0;i<nums.size();i++) {
                    if(nums[i] != i+1) {
                            return nums[i];
                    }
            }
            
            return -1;
    }
};                 */
